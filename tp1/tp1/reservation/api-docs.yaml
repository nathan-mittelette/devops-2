openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/trains:
    get:
      tags:
        - train-api
      operationId: getAllTrains
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageTrainDto'
    post:
      tags:
        - train-api
      operationId: createTrain
      parameters:
        - name: manualTravelAssign
          in: query
          required: false
          schema:
            type: boolean
            default: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainCreationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainDto'
  /api/bookings:
    get:
      tags:
        - booking-api
      operationId: getBooking
      parameters:
        - name: bookingNumber
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponse'
    post:
      tags:
        - booking-api
      operationId: bookTravel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingResponse'
  /api/travels/{id}:
    get:
      tags:
        - travel-api
      operationId: getTravel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: stationFrom
          in: query
          required: true
          schema:
            type: string
        - name: stationTo
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TravelDetail'
    patch:
      tags:
        - travel-api
      operationId: updateTravel
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TravelUpdateRequest'
        required: true
      responses:
        '200':
          description: OK
  /api/travels/search:
    get:
      tags:
        - search-travel-api
      operationId: searchAllTravels
      parameters:
        - name: from
          in: query
          required: true
          schema:
            type: string
        - name: to
          in: query
          required: true
          schema:
            type: string
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: tripType
          in: query
          required: false
          schema:
            type: string
            default: both
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TravelListDto'
  /api/trains/{id}:
    get:
      tags:
        - train-api
      operationId: getTrain
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainDto'
  /api/tickets/{ticketNumber}:
    get:
      tags:
        - ticket-controller
      operationId: getTicketWithNumber
      parameters:
        - name: ticketNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /api/invoices:
    get:
      tags:
        - invoice-controller
      operationId: getInvoice
      parameters:
        - name: bookingNumber
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/pdf:
              schema:
                type: array
                items:
                  type: string
                  format: byte
components:
  schemas:
    CarCreationRequest:
      type: object
      properties:
        carType:
          type: string
        carClass:
          type: string
        numberSeatFirstClass:
          type: integer
          format: int32
        numberSeatSecondClass:
          type: integer
          format: int32
    TrainCreationRequest:
      type: object
      properties:
        cars:
          type: array
          items:
            $ref: '#/components/schemas/CarCreationRequest'
    CarDto:
      type: object
      properties:
        carId:
          type: integer
          format: int64
        carType:
          type: string
        carClass:
          type: string
        numberSeatFirstClass:
          type: integer
          format: int32
        numberSeatSecondClass:
          type: integer
          format: int32
        trainId:
          type: integer
          format: int64
    TrainDto:
      type: object
      properties:
        trainId:
          type: integer
          format: int64
        cars:
          type: array
          items:
            $ref: '#/components/schemas/CarDto'
    BookingRequest:
      type: object
      properties:
        travelId:
          type: integer
          format: int64
        seatBookingRequests:
          type: array
          items:
            $ref: '#/components/schemas/SeatBookingRequest'
        date:
          type: string
          format: date
        stationA:
          type: string
        stationB:
          type: string
    SeatBookingRequest:
      type: object
      properties:
        seatId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        birthdate:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
    BookingResponse:
      type: object
      properties:
        bookingNumber:
          type: string
        tickets:
          type: array
          items:
            type: string
    TravelUpdateRequest:
      type: object
      properties:
        priceFirstClass:
          type: number
          format: float
        priceSecondClass:
          type: number
          format: float
        trainId:
          type: integer
          format: int64
        empty:
          type: boolean
    CarWithAvailability:
      type: object
      properties:
        carId:
          type: integer
          format: int64
        carType:
          type: string
        carClass:
          type: string
          enum:
            - A
            - B
        numberSeatFirstClass:
          type: integer
          format: int32
        numberSeatSecondClass:
          type: integer
          format: int32
        trainId:
          type: integer
          format: int64
        seats:
          type: array
          items:
            $ref: '#/components/schemas/SeatWithAvailability'
    SeatWithAvailability:
      type: object
      properties:
        seatId:
          type: integer
          format: int64
        seatNumber:
          type: integer
          format: int32
        available:
          type: boolean
    TrainWithAvailability:
      type: object
      properties:
        trainId:
          type: integer
          format: int64
        cars:
          type: array
          items:
            $ref: '#/components/schemas/CarWithAvailability'
    TravelDetail:
      type: object
      properties:
        travelId:
          type: integer
          format: int64
        priceFirstClass:
          type: number
          format: float
        priceSecondClass:
          type: number
          format: float
        tripId:
          type: string
        train:
          $ref: '#/components/schemas/TrainWithAvailability'
        availableFirstClassSeatCount:
          type: integer
          format: int32
        availableSecondClassSeatCount:
          type: integer
          format: int32
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    StopTimeDto:
      type: object
      properties:
        departure:
          $ref: '#/components/schemas/LocalTime'
        name:
          type: string
    TravelListDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        priceFirstClass:
          type: number
          format: float
        priceSecondClass:
          type: number
          format: float
        availableFirstClassSeatCount:
          type: integer
          format: int32
        availableSecondClassSeatCount:
          type: integer
          format: int32
        departure:
          $ref: '#/components/schemas/StopTimeDto'
        arrival:
          $ref: '#/components/schemas/StopTimeDto'
    PageTrainDto:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        pageable:
          $ref: '#/components/schemas/Pageable'
        first:
          type: boolean
        last:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        number:
          type: integer
          format: int32
        numberOfElements:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/TrainDto'
        empty:
          type: boolean
    Pageable:
      type: object
      properties:
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
        sort:
          $ref: '#/components/schemas/Sort'
        offset:
          type: integer
          format: int64
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
