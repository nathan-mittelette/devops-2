version: '3.3'
services:
  backend:
    container_name: backend
    build: ./sample-application-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/SchoolOrganisation
      - OTEL_TRACES_EXPORTER=jaeger
      - OTEL_EXPORTER_JAEGER_ENDPOINT=http://jaeger:14250
      - OTEL_SERVICE_NAME=StudentApp
    networks:
      - app-network
    depends_on:
      - database

  database:
    container_name: database
    image: postgres:13-alpine
    networks:
      - app-network
    environment:
      - POSTGRES_PASSWORD=takimapass
      - POSTGRES_USER=takima
      - POSTGRES_DB=SchoolOrganisation

  frontend:
    container_name: frontend
    build: ./sample-application-frontend
    ports:
      - "80:80"
    networks:
      - app-network

  jaeger:
    container_name: jaeger
    image: jaegertracing/opentelemetry-all-in-one
    ports:
      - "16686:16686"
    environment:
      - JAEGER_AGENT_HOST=jaeger
    networks:
      - app-network
    restart: on-failure

  grafana:
    image: grafana/grafana:8.2.0
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres
      - GF_DATABASE_USER=user
      - GF_DATABASE_PASSWORD=password
    networks:
      - app-network

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=user
      - POSTGRES_DB=grafana
    networks:
      - app-network
    restart: on-failure

networks:
  app-network:
