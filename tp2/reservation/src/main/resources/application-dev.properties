# Datasource
spring.datasource.url=jdbc:postgresql://localhost:5432/reservation
spring.datasource.username=postgres
spring.datasource.password=password
# Hibernate
spring.jpa.properties.hibernate.default_schema=PUBLIC
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate
# Logger
logging.level.root=info
logging.pattern.console="%-21(%yellow(%d{HH:mm:ss} [%10.-10thread])) %highlight(%-5level) %cyan(%logger.%M:%L) - %msg%n"
# Tomcat
server.tomcat.basedir=tomcat
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.directory=logs
server.tomcat.accesslog.pattern=%{begin:msec}t %a %A %p %m \"%r\" %s %b %v %T/%D %F %{correlator}i
server.tomcat.accesslog.suffix=.log
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.file-date-format=.yyyy-MM-dd
# CORS
cors.allow-origin=*
config.error.generator.enable=false
management.metrics.export.prometheus.enabled=true
management.metrics.tags.host=${random.uuid}
management.metrics.tags.service=reservation
management.metrics.tags.application=reservation
management.server.add-application-context-header=false
management.endpoints.web.base-path=/api/actuator
management.endpoints.web.exposure.include=health,info,env,metrics,beans,configprops,prometheus